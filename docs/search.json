[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"notebook sets selection analyses pilot study medaka bold-shy behaviours using 5 established inbred strains (iCab, HdrR, Kaga, HNI, HO5).","code":""},{"path":"index.html","id":"videos","chapter":"1 About","heading":"1.1 Videos","text":"videos showcase example data HMM movement classifications 5 lines. Set quality HD viewing.video displays one 10-minute open field assay 4 pairs fish, sped 10x.Top left raw video labelled fishes.Top right paths fish.Bottom left paths test fish (either iCab, HdrR, Kaga, HNI, HO5), coloured HMM state.Bottom right paths reference iCab fish, coloured HMM state.","code":""},{"path":"index.html","id":"icab-southern-japan","chapter":"1 About","heading":"1.1.1 iCab (southern Japan)","text":"","code":""},{"path":"index.html","id":"hdrr-southern-japan","chapter":"1 About","heading":"1.1.2 HdrR (southern Japan)","text":"","code":""},{"path":"index.html","id":"kaga-northern-japan","chapter":"1 About","heading":"1.1.3 Kaga (northern Japan)","text":"","code":""},{"path":"index.html","id":"hni-northern-japan","chapter":"1 About","heading":"1.1.4 HNI (northern Japan)","text":"","code":""},{"path":"index.html","id":"ho5-southern-japan","chapter":"1 About","heading":"1.1.5 HO5 (southern Japan)","text":"","code":""},{"path":"experimental-setup.html","id":"experimental-setup","chapter":"2 Experimental setup","heading":"2 Experimental setup","text":"study used combined open-field novel-object assay determine: ) whether consistent differences bold-shy behaviours exhibited 5 established inbred lines medaka fish (iCab, HdrR, HO5 southern Japan, Kaga HNI northern Japan); b) whether consistent differences bold-shy behaviours exhibited single line (iCab) dependent line partnered . former intended measure effect individual’s genes behaviour (direct genetic effect), latter measure effect genes focal fish’s tank partner behaviour focal fish (social genetic effect). experimental design, involving assaying pairs fish, allowed us assess direct indirect effects behaviour simultaneously, infer degree variation bold-shy behaviours attributable differences individual’s genetics, differences genetics social companions, stochastic variation. schema experimental plan shown Figure 2.1.\nFigure 2.1: Schema experimental plan. iCab-iCab pairings control condition. explore direct genetic effects behaviour, compare behaviours test fishes different lines, infer differences lines caused differences genetics (direct genetic effects). explore social genetic effects, use data turn focus reference fish, infer differences observe behaviours caused differences social environments, turn driven different genetics test fish lines (social genetic effects).\nbehavioural assay 20 minutes long, comprising two consecutively-run 10-minute components: ) ‘open field’ component, fishes introduced test tank left swim around freely (??); b) ‘novel object’ component, small black plastic cylinder added tank beginning second 10-minute period, fishes left swim around freely (??).assay run pairs fish. used female fish avoid confounding aggressive interactions males, mating behaviours males females. increase throughput assay, constructed test tank divided four quadrants barriers, allowing us run assay four pairs fish time. addition, used two test tanks situated side--side, run assay 8 pairs concurrently. experimental setup used shown 2.2.\nFigure 2.2: : Experimental setup, two test boxes side--side (denoted “L” left “R” right). test box contains one test tank, separated removable barriers quadrants, allowing simultaneous assay four pairs fish per test tank. interior box ambiently illuminated LED lights, camera suspended centre test tank record videos. B: Four pairs fishes test tank labelled quadrants (, II, III, IV) lines (iCab HdrR). C: Paths iCab reference fish HdrR test fish video panel (B) 110 seconds.\n","code":""},{"path":"data-collection.html","id":"data-collection","chapter":"3 Data collection","heading":"3 Data collection","text":"11 16 June 2019, ran behavioural assay 77 times 307 pairs fish (one run 3 pairs), total test fish count 68 iCab, 60 HdrR, 76 HNI, 47 Kaga, 56 HO5. locations lines’ originating populations shown Figure 3.1. two fish pair denoted either “reference fish”, always came iCab line, introduced test tank first; “test fish” – either another iCab fish control condition, fish one four lines assayed experiment (HdrR, HNI, Kaga, HO5). order lines assayed across six days randomly determined prior collection data (Figure ??). test tanks also rinsed runs remove substances released subjects previous runs influence behaviour following subjects.\nFigure 3.1: Image adapted Mikhail Spivakov et al.1, showing locations originating populations 5 inbred medaka lines used study.\n","code":""},{"path":"effect-of-covariates.html","id":"effect-of-covariates","chapter":"4 Effect of covariates","heading":"4 Effect of covariates","text":"examined effects several covariates, including date assay, time assay, tank quadrant, tank side. achieve , calculated mean speed individuals iCab-iCab pairings (N = 136) course entire 20-minute video (including open field novel object assays), ran multi-way ANOVA covariates (Figure ??).","code":""},{"path":"effect-of-covariates.html","id":"setup","chapter":"4 Effect of covariates","heading":"4.1 Setup","text":"","code":""},{"path":"effect-of-covariates.html","id":"load-libraries","chapter":"4 Effect of covariates","heading":"4.1.1 Load libraries","text":"","code":"\nlibrary(tidyverse)\nlibrary(ggbeeswarm)\nlibrary(devtools)\nlibrary(cowplot)\nlibrary(ggpubr)"},{"path":"effect-of-covariates.html","id":"set-variables","chapter":"4 Effect of covariates","heading":"4.1.2 Set variables","text":"","code":"\nIN = \"/hps/nobackup/birney/users/ian/pilot/hmm_out/0.08/dist_angle/14.csv\"\nOUT_OF = \"book/figs/covariate_effects/0.08/dist_angle/14/covariate_effects_of.png\"\nOUT_NO = \"book/figs/covariate_effects/0.08/dist_angle/14/covariate_effects_no.png\"\nOUT_NOASSAY = \"book/figs/covariate_effects/0.08/dist_angle/14/covariate_effects_no-split-by-assay.png\""},{"path":"effect-of-covariates.html","id":"source-lighterdarker-functions","chapter":"4 Effect of covariates","heading":"4.1.3 Source lighter/darker functions","text":"","code":"\ndevtools::source_gist(\"c5015ee666cdf8d9f7e25fa3c8063c99\")\n#> ℹ Sourcing https://gist.githubusercontent.com/brettellebi/c5015ee666cdf8d9f7e25fa3c8063c99/raw/15832e2684e4c08a652eb82d4b559bea4e8994e4/karyoploteR_lighter_darker.R\n#> ℹ SHA-1 hash of file is 3d840ff655bd54f4b19517cf99ec4bd3640a30c5"},{"path":"effect-of-covariates.html","id":"read-and-process-data","chapter":"4 Effect of covariates","heading":"4.2 Read and process data","text":"","code":"\ndf = readr::read_csv(IN) \n#> Rows: 9152328 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndf_control = df %>% \n  # Filter for only iCabs paired with iCabs\n  dplyr::filter(test_fish == \"icab\") %>% \n  # Get individual\n  tidyr::unite(date, time, quadrant, fish,\n               col = \"indiv\", \n               remove = F) %>% \n  # Group by assay and individual to get mean speed\n  dplyr::group_by(assay, date, time, quadrant, tank_side, indiv) %>% \n  # Calculate mean speed\n  dplyr::summarise(mean_speed = mean(distance)) %>% \n  dplyr::ungroup() %>% \n  # Make date a factor\n  dplyr::mutate(date = as.factor(date))\n#> `summarise()` has grouped output by 'assay', 'date',\n#> 'time', 'quadrant', 'tank_side'. You can override using the\n#> `.groups` argument."},{"path":"effect-of-covariates.html","id":"calculate-mean-speed-across-both-assays-for-each-individual","chapter":"4 Effect of covariates","heading":"4.2.1 Calculate mean speed across both assays for each individual","text":"","code":"\ndf_control_noassay = df %>% \n  # Filter for only iCabs paired with iCabs\n  dplyr::filter(test_fish == \"icab\") %>% \n  # Get individual\n  tidyr::unite(date, time, quadrant, fish,\n               col = \"indiv\", \n               remove = F) %>% \n  # Group by assay and individual to get mean speed\n  dplyr::group_by(date, time, quadrant, tank_side, indiv) %>% \n  # Calculate mean speed\n  dplyr::summarise(mean_speed = mean(distance)) %>% \n  dplyr::ungroup() %>% \n  # Make date a factor\n  dplyr::mutate(date = as.factor(date))\n#> `summarise()` has grouped output by 'date', 'time',\n#> 'quadrant', 'tank_side'. You can override using the\n#> `.groups` argument."},{"path":"effect-of-covariates.html","id":"anova","chapter":"4 Effect of covariates","heading":"4.3 ANOVA","text":"","code":""},{"path":"effect-of-covariates.html","id":"model","chapter":"4 Effect of covariates","heading":"4.3.1 Model","text":"\\[\n\\operatorname{mean\\ speed} = \\beta_{1}(\\operatorname{date}) + \\beta_{2}(\\operatorname{time}) + \\beta_{3}(\\operatorname{quadrant}) + \\beta_{4}(\\operatorname{tank\\_side}) + \\epsilon\n\\]","code":""},{"path":"effect-of-covariates.html","id":"all-days","chapter":"4 Effect of covariates","heading":"4.3.2 All days","text":"shown , found significant differences date assay tank quadrant (p = 0.0139 0.0108), time assay tank side. may caused difference way assay performed first day experiment (11 June 2019), used thick fabric sheet cover front box rather wooden doors shown Figure 2.2, installed following day. greater level external light sound permeating fabric may caused fishes exhibit slower movement first day. model excludes data collected first day.","code":"\naov_df_noassay = df_control_noassay %>% \n  aov(mean_speed ~ date + time + quadrant + tank_side,\n      data = .) %>%\n  broom::tidy(.) %>% \n  rstatix::add_significance(p.col = \"p.value\") %>% \n  # reduce to 3 digits\n  dplyr::mutate(dplyr::across(c(\"sumsq\", \"meansq\", \"statistic\", \"p.value\"),\n                              ~signif(.x, digits = 3))) %>% \n  # paste p-value with significance\n  dplyr::mutate(p_final = dplyr::case_when(p.value.signif == \"ns\" ~ paste(\"p =\", p.value),\n                                           TRUE ~ paste(\"p =\", p.value, p.value.signif)))\n\nDT::datatable(aov_df_noassay)"},{"path":"effect-of-covariates.html","id":"excluding-the-first-day","chapter":"4 Effect of covariates","heading":"4.3.3 Excluding the first day","text":"data first day excluded, p-values date assay tank quadrant increase 0.0477 0.0469 respectively. Figure ?? shows boxplots p-values covariate.","code":"\naov_df_noassay_nofirstday = df_control_noassay %>% \n  dplyr::filter(date != \"20190611\") %>% \n  aov(mean_speed ~ date + time + quadrant + tank_side,\n      data = .) %>%\n  broom::tidy(.) %>% \n  rstatix::add_significance(p.col = \"p.value\") %>% \n  # reduce to 3 digits\n  dplyr::mutate(dplyr::across(c(\"sumsq\", \"meansq\", \"statistic\", \"p.value\"),\n                              ~signif(.x, digits = 3))) %>% \n  # paste p-value with significance\n  dplyr::mutate(p_final = dplyr::case_when(p.value.signif == \"ns\" ~ paste(\"p =\", p.value),\n                                           TRUE ~ paste(\"p =\", p.value, p.value.signif)))\n\nDT::datatable(aov_df_noassay_nofirstday)"},{"path":"effect-of-covariates.html","id":"plot","chapter":"4 Effect of covariates","heading":"4.4 Plot","text":"","code":"\nP_VAL_HEI = 4.7"},{"path":"effect-of-covariates.html","id":"date","chapter":"4 Effect of covariates","heading":"4.4.1 Date","text":"","code":"\ndate_pal = colorspace::sequential_hcl(length(unique(df_control_noassay$date)),\n                                      palette = \"OrYel\")\n\ndate_fig_noassay = df_control_noassay %>% \n  dplyr::mutate(date = factor(date, levels = sort(unique(date)))) %>% \n  #ggplot(aes(date, mean_speed, fill = date)) +\n  ggplot() +\n  geom_violin(aes(date, mean_speed, fill = date, colour = date)) +\n  geom_boxplot(aes(date, mean_speed, fill = date, colour = date),\n               width = 0.15) +\n  ggbeeswarm::geom_beeswarm(aes(date, mean_speed),\n                            colour = \"#3B1F2B\", alpha = 0.8) +\n  geom_text(data = aov_df_noassay %>% \n              dplyr::filter(term == \"date\"),\n            aes(x = \"20190611\", y = P_VAL_HEI, label = p_final)) +\n  #geom_text(x = \"20190611\", y = 3.15, label = paste(\"p =\", kw_date)) +\n  scale_fill_manual(values = date_pal) +\n  scale_colour_manual(values = darker(date_pal, amount = 100)) +\n  cowplot::theme_cowplot() +\n  guides(fill = \"none\",\n         colour = \"none\") +\n  ylab(\"mean speed\") "},{"path":"effect-of-covariates.html","id":"time","chapter":"4 Effect of covariates","heading":"4.4.2 Time","text":"","code":"\ntime_pal = colorspace::sequential_hcl(length(unique(df_control_noassay$time)),\n                                      palette = \"ag_GrnYl\")\n\ntime_fig_noassay = df_control_noassay %>% \n  dplyr::mutate(time = factor(time)) %>% \n  ggplot() +\n  geom_violin(aes(time, mean_speed, fill = time, colour = time)) +\n  geom_boxplot(aes(time, mean_speed, fill = time, colour = time),\n               width = 0.1) +\n  ggbeeswarm::geom_beeswarm(aes(time, mean_speed),\n                            colour = \"#3B1F2B\", alpha = 0.8) +\n  geom_text(data = aov_df_noassay %>% \n              dplyr::filter(term == \"time\"),\n            aes(x = \"952\", y = P_VAL_HEI, label = p_final)) +\n  scale_fill_manual(values = time_pal) +\n  scale_colour_manual(values = darker(time_pal, amount = 100)) +\n  cowplot::theme_cowplot() +\n  guides(colour = \"none\",\n         fill = \"none\") +\n  ylab(\"mean speed\") "},{"path":"effect-of-covariates.html","id":"quadrant","chapter":"4 Effect of covariates","heading":"4.4.3 Quadrant","text":"","code":"\nquad_pal = scales::hue_pal()(4)\n\nquad_fig_noassay = df_control_noassay %>% \n  dplyr::mutate(quadrant = dplyr::recode(quadrant,\n                                         \"q1\" = \"I\",\n                                         \"q2\" = \"II\",\n                                         \"q3\" = \"III\",\n                                         \"q4\" = \"IV\")) %>% \n  dplyr::mutate(quadrant = factor(quadrant, levels = c(\"I\", \"II\", \"III\", \"IV\"))) %>% \n  #ggplot(aes(quadrant, mean_speed, fill = quadrant)) +\n  ggplot() +\n  geom_violin(aes(quadrant, mean_speed, fill = quadrant, colour = quadrant)) +\n  geom_boxplot(aes(quadrant, mean_speed, fill = quadrant, colour = quadrant),\n               width = 0.2) +\n  ggbeeswarm::geom_beeswarm(aes(quadrant, mean_speed),\n                            colour = \"#3B1F2B\", alpha = 0.8) +\n  geom_text(data = aov_df_noassay %>% \n              dplyr::filter(term == \"quadrant\"),\n            aes(x = \"I\", y = P_VAL_HEI, label = p_final)) +\n  scale_fill_manual(values = quad_pal) +\n  scale_colour_manual(values = darker(quad_pal, amount = 100)) +\n  cowplot::theme_cowplot() +\n  guides(colour = \"none\",\n         fill = \"none\") +\n  ylab(\"mean speed\") "},{"path":"effect-of-covariates.html","id":"tank-side","chapter":"4 Effect of covariates","heading":"4.4.4 Tank side","text":"","code":"\ntank_pal = colorspace::diverging_hcl(length(unique(df_control_noassay$tank_side)),\n                                     palette = \"Red-Green\")\n\ntank_fig_noassay = df_control_noassay %>% \n  dplyr::mutate(tank_side = factor(tank_side, levels = c(\"L\", \"R\"))) %>% \n  #ggplot(aes(tank_side, mean_speed, fill = tank_side)) +]\n  ggplot() +\n  geom_violin(aes(tank_side, mean_speed, fill = tank_side, colour = tank_side)) +\n  geom_boxplot(aes(tank_side, mean_speed, fill = tank_side, colour = tank_side),\n               width = 0.25) +\n  ggbeeswarm::geom_beeswarm(aes(tank_side, mean_speed),\n                            colour = \"#3B1F2B\", alpha = 0.8) +  \n  geom_text(data = aov_df_noassay %>% \n              dplyr::filter(term == \"tank_side\"),\n            aes(x = \"L\", y = P_VAL_HEI, label = p_final)) +\n  scale_fill_manual(values = tank_pal) +\n  scale_colour_manual(values = darker(tank_pal, amount = 100)) +\n  cowplot::theme_cowplot() +\n  guides(colour = \"none\",\n         fill = \"none\") +\n  ylab(\"mean speed\") +\n  xlab(\"tank side\")"},{"path":"effect-of-covariates.html","id":"compile","chapter":"4 Effect of covariates","heading":"4.4.5 Compile","text":"","code":"\nfinal_noassay = cowplot::ggdraw() +\n  cowplot::draw_plot(date_fig_noassay,\n                     x = 0, y = 0.5,\n                     width = 0.55, height = 0.5) + \n  cowplot::draw_plot(quad_fig_noassay,\n                     x = 0.55, y = 0.5,\n                     width = 0.45, height = 0.5) + \n  cowplot::draw_plot(time_fig_noassay,\n                     x = 0, y = 0,\n                     width = 0.6, height = 0.5) + \n  cowplot::draw_plot(tank_fig_noassay,\n                     x = 0.6, y = 0,\n                     width = 0.4, height = 0.5) +\n  cowplot::draw_plot_label(c(\"A\", \"B\", \"C\", \"D\"),\n                           x = c(0, 0.55, 0, 0.6),\n                           y = c(1, 1, 0.5, 0.5))\n# Save\nggsave(here::here(OUT_NOASSAY),\n       final_noassay,\n       device = \"png\",\n       width = 15,\n       height = 9,\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(here::here(OUT_NOASSAY))"},{"path":"param-optim.html","id":"param-optim","chapter":"5 HMM parameter optimisation","heading":"5 HMM parameter optimisation","text":"","code":""},{"path":"param-optim.html","id":"setup-1","chapter":"5 HMM parameter optimisation","heading":"5.1 Setup","text":"","code":""},{"path":"param-optim.html","id":"load-libraries-1","chapter":"5 HMM parameter optimisation","heading":"5.1.1 Load libraries","text":"","code":"\nlibrary(tidyverse)\nlibrary(cowplot)"},{"path":"param-optim.html","id":"set-variables-1","chapter":"5 HMM parameter optimisation","heading":"5.1.2 Set variables","text":"","code":"\nCONC = as.list(list.files(\"/hps/nobackup/birney/users/ian/pilot/hmm_concordance_recode/\",full.names = T, recursive = T))\nKW = \"/hps/nobackup/birney/users/ian/pilot/kruskal_wallis/out.rds\"\nOUT_PNG = here::here(\"book/figs/compare_params/compare_params.png\")\nOUT_PDF = here::here(\"book/figs/compare_params/compare_params.pdf\")"},{"path":"param-optim.html","id":"read-data-and-process","chapter":"5 HMM parameter optimisation","heading":"5.2 Read data and process","text":"","code":"\nkw = readRDS(KW) %>% \n  dplyr::mutate(INTERVAL = as.numeric(INTERVAL)) %>% \n  dplyr::mutate(N_STATES = as.numeric(N_STATES))\n\nconc = purrr::map_dfr(CONC, readRDS) %>% \n  dplyr::group_by(INTERVAL, N_STATES) %>% \n  # get mean across groups A and B\n  dplyr::summarise(MEAN_CONC = mean(CONCORDANCE))\n#> `summarise()` has grouped output by 'INTERVAL'. You can\n#> override using the `.groups` argument.\n\ndf = dplyr::left_join(kw, conc, by = c(\"INTERVAL\", \"N_STATES\"))"},{"path":"param-optim.html","id":"plot-1","chapter":"5 HMM parameter optimisation","heading":"5.3 Plot","text":"","code":"\npal = colorspace::sequential_hcl(length(unique(df$N_STATES)), palette = \"ag_Sunset\")\n\nout_plot = df %>% \n  dplyr::mutate(N_STATES = factor(N_STATES, levels = sort(unique(N_STATES)))) %>% \n  dplyr::mutate(INTERVAL = factor(INTERVAL, levels = sort(unique(INTERVAL)))) %>% \n  # make new column combining `INTERVAL` and `N_STATES`\n  tidyr::unite(INTERVAL, N_STATES,\n               col = \"INT_STATE\",\n               sep = \";\",\n               remove = F) %>% \n  ggplot(aes(MEAN_CONC, SUM_KW_STAT)) +\n    geom_point(aes(size = INTERVAL, colour = N_STATES),\n               alpha = 0.8) +\n    ggrepel::geom_text_repel(aes(label = INT_STATE),\n              size = 2,\n              ) +\n    theme_bw() +\n    guides(size = guide_legend(title = \"Interval\\n(seconds)\"),\n           colour = guide_legend(title = \"N states\")) +\n    scale_colour_manual(values = pal) +\n    xlab(\"mean concordance between cross-validated HMM states\") +\n    ylab(\"summed Kruskal-Wallis statistic comparing frequency\\nof time spent in each HMM state across medaka lines\")\n\nplotly::ggplotly(out_plot)\n#> Warning: Using size for a discrete variable is not advised.\n#> Warning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomTextRepel() has yet to be implemented in plotly.\n#>   If you'd like to see this geom implemented,\n#>   Please open an issue with your example code at\n#>   https://github.com/ropensci/plotly/issues"},{"path":"param-optim.html","id":"save","chapter":"5 HMM parameter optimisation","heading":"5.3.1 Save","text":"","code":"\nggsave(OUT_PNG,\n       out_plot,\n       device = \"png\",\n       width = 10,\n       height = 8.5,\n       units = \"in\",\n       dpi = 400)\n\nggsave(OUT_PDF,\n       out_plot,\n       device = \"pdf\",\n       width = 10,\n       height = 8.5,\n       units = \"in\",\n       dpi = 400)"},{"path":"param-optim.html","id":"show-paper-figure","chapter":"5 HMM parameter optimisation","heading":"5.3.2 Show paper figure","text":"\nFigure 5.1: Comparison HMM parameters. Horizontal axis: Mean concordance states assigned HMMs 2-fold cross-validation process. Vertical axis: Kruskal-Wallis statistic comparing lines based proportion time spent HMM state, summed across states. Size points correspond interval, seconds, distance angle travel calculated.\n","code":"\nknitr::include_graphics(OUT_PNG)"},{"path":"hmm-states.html","id":"hmm-states","chapter":"6 HMM states","heading":"6 HMM states","text":"show using higher number states HMM appeared optimise balance ability discern differences lines model overfitting, yet produced asymmetries classified states impede biological interpretation.HMMs trained distance angle variables. Figure 6.1 depicts distance angle travel movements represented polar plots.\nFigure 6.1: Distance (log10(pixels)) angle travel time interval 0.2 seconds points B → C distance, points → B → C angle. point represents distance angle point C, → B aligned vertically along 0-180° radial axis. figure shows illustrative 10,000 points, randomly selected full dataset. States sorted ascending order mean distance.\n","code":""},{"path":"hmm-states.html","id":"setup-2","chapter":"6 HMM states","heading":"6.1 Setup","text":"","code":""},{"path":"hmm-states.html","id":"load-libraries-2","chapter":"6 HMM states","heading":"6.1.1 Load libraries","text":"","code":"\nlibrary(tidyverse)\nlibrary(wesanderson)\nlibrary(rstatix)\nlibrary(cowplot)\n# Variables included in HMM\nVARIABLES = \"dist_angle\"\n\n# Create line recode vector\nline_vec = c(\"iCab\", \"HdrR\", \"HNI\", \"Kaga\", \"HO5\")\nnames(line_vec) = c(\"icab\", \"hdr\", \"hni\", \"kaga\", \"ho5\")\n\n# Function for plot dimensions\nget_wid_hei = function(N_STATES){\n  if (N_STATES == 14){\n    POL_ALL_WID = 12\n    POL_ALL_HEI = 7\n  } else {\n    POL_ALL_WID = 7.5\n    POL_ALL_HEI = 10\n  }\n  return(c(POL_ALL_WID, POL_ALL_HEI))\n}\n\n# Function for number of rows in plot\nget_n_rows = function(N_STATES){ \n  if (N_STATES == 15){\n    N_ROWS = 5\n  } else if (N_STATES == 12 | N_STATES == 16) {\n    N_ROWS = 4\n  } else if (N_STATES == 17 | N_STATES == 18){\n    N_ROWS = 6\n  } else if (N_STATES == 14){\n    N_ROWS = 2\n  }\n  return(N_ROWS)\n}"},{"path":"hmm-states.html","id":"unfavourable-asymmetry-with-higher-numbers-of-states","chapter":"6 HMM states","heading":"6.2 Unfavourable asymmetry with higher numbers of states","text":"Based visualisation polar plots state-number/interval combination, excluded combinations 15 states due asymmetry across states create difficulties interpreting biological meaning. show example combination 16 states 0.05-second interval, states 1 3 split asymmetrically (Figure ??).","code":""},{"path":"hmm-states.html","id":"states-0.05-second-interval","chapter":"6 HMM states","heading":"6.2.1 16 states; 0.05 second interval","text":"","code":""},{"path":"hmm-states.html","id":"variables","chapter":"6 HMM states","heading":"6.2.1.1 Variables","text":"","code":"\nN_STATES = 16\nINTERVAL = 0.05\nIN = file.path(\"/hps/nobackup/birney/users/ian/pilot/hmm_out\",\n               INTERVAL,\n               VARIABLES,\n               paste(N_STATES, \".csv\", sep = \"\")\n               )\n\nN_ROWS = get_n_rows(N_STATES)\nPOL_DIMS = get_wid_hei(N_STATES)\nPOLAR_ALL_DGE = here::here(\"book/figs/paper_final\",\n                           INTERVAL,\n                           VARIABLES,\n                           N_STATES,\n                           \"polar_all_dge.png\")"},{"path":"hmm-states.html","id":"read-data-and-process-1","chapter":"6 HMM states","heading":"6.2.1.2 Read data and process","text":"","code":"\ndf = readr::read_csv(IN) %>% \n  # recode angle to sit between 0 and 360\n  dplyr::mutate(angle_recode = ifelse(angle < 0,\n                                      180 + (180 + angle),\n                                      angle))\n#> Rows: 14649781 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Recode states by mean distance\n\nrank_df = df %>% \n  dplyr::group_by(state) %>% \n  dplyr::summarise(mean_dist = mean(distance)) %>% \n  # rank\n  dplyr::arrange(mean_dist) %>% \n  dplyr::mutate(rank = 1:nrow(.))\n\nrecode_vec = rank_df %>% \n  dplyr::pull(rank)\nnames(recode_vec) = rank_df %>% \n  dplyr::pull(state)\n\n# Recode `state`\n\ndf = df %>% \n  dplyr::mutate(state_recode = dplyr::recode(state, !!!recode_vec))"},{"path":"hmm-states.html","id":"plot-2","chapter":"6 HMM states","heading":"6.2.1.3 Plot","text":"","code":"\npolar_all_dge = df %>% \n  # select random sample of 1e5 rows\n  dplyr::slice_sample(n = 1e5) %>% \n  # factorise `state_recode`\n  #dplyr::mutate(state_recode = factor(state_recode, levels = recode_vec)) %>% \n  ggplot() +\n  geom_point(aes(angle_recode, log10(distance), colour = state_recode),\n             alpha = 0.3, size = 0.2) +\n  coord_polar() +\n  facet_wrap(~state_recode, nrow = N_ROWS) +\n  #theme_dark(base_size = 8) +\n  cowplot::theme_cowplot(font_size = 10) +\n  scale_x_continuous(labels = c(0, 90, 180, 270),\n                     breaks = c(0, 90, 180, 270)) +\n  scale_color_viridis_c() +\n  guides(colour = \"none\") +\n  xlab(\"angle of travel\") +\n  ylab(expression(log[10](\"distance travelled in pixels\")))\n# Save\nggsave(POLAR_ALL_DGE,\n       polar_all_dge,\n       device = \"png\",\n       width = POL_DIMS[1],\n       height = POL_DIMS[2],\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(POLAR_ALL_DGE)"},{"path":"hmm-states.html","id":"best-optimisation-with-state-symmetry","chapter":"6 HMM states","heading":"6.3 Best optimisation with state symmetry","text":"","code":""},{"path":"hmm-states.html","id":"states-0.08-second-interval","chapter":"6 HMM states","heading":"6.3.1 14 states; 0.08 second interval","text":"downstream analysis selected combination 14 states 0.08-second interval time points (Figure 6.1), remaining combinations appeared optimally balance level overfitting detection differences lines – see Chapter 5.","code":"\nN_STATES = 14\nINTERVAL = 0.08\nIN = file.path(\"/hps/nobackup/birney/users/ian/pilot/hmm_out\",\n               INTERVAL,\n               VARIABLES,\n               paste(N_STATES, \".csv\", sep = \"\")\n               )\n\nN_ROWS = get_n_rows(N_STATES)\nPOL_DIMS = get_wid_hei(N_STATES)\nPOLAR_ALL_DGE = here::here(\"book/figs/paper_final\",\n                           INTERVAL,\n                           VARIABLES,\n                           N_STATES,\n                           \"polar_all_dge.png\")"},{"path":"hmm-states.html","id":"read-data-and-process-2","chapter":"6 HMM states","heading":"6.3.1.1 Read data and process","text":"","code":"\ndf = readr::read_csv(IN) %>% \n  # recode angle to sit between 0 and 360\n  dplyr::mutate(angle_recode = ifelse(angle < 0,\n                                      180 + (180 + angle),\n                                      angle))\n#> Rows: 9152328 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Recode states by mean distance\n\nrank_df = df %>% \n  dplyr::group_by(state) %>% \n  dplyr::summarise(mean_dist = mean(distance)) %>% \n  # rank\n  dplyr::arrange(mean_dist) %>% \n  dplyr::mutate(rank = 1:nrow(.))\n\nrecode_vec = rank_df %>% \n  dplyr::pull(rank)\nnames(recode_vec) = rank_df %>% \n  dplyr::pull(state)\n\n# Recode `state`\n\ndf = df %>% \n  dplyr::mutate(state_recode = dplyr::recode(state, !!!recode_vec))"},{"path":"hmm-states.html","id":"plot-3","chapter":"6 HMM states","heading":"6.3.1.2 Plot","text":"","code":"\npolar_all_dge = df %>% \n  # select random sample of 1e5 rows\n  dplyr::slice_sample(n = 1e5) %>% \n  ggplot() +\n  geom_point(aes(angle_recode, log10(distance), colour = state_recode),\n             alpha = 0.3, size = 0.2) +\n  coord_polar() +\n  facet_wrap(~state_recode, nrow = N_ROWS) +\n  cowplot::theme_cowplot(font_size = 10) +\n  scale_x_continuous(labels = c(0, 90, 180, 270),\n                     breaks = c(0, 90, 180, 270)) +\n  scale_color_viridis_c() +\n  guides(colour = \"none\") +\n  xlab(\"angle of travel\") +\n  ylab(expression(log[10](\"distance travelled in pixels\")))\n# Save\nggsave(POLAR_ALL_DGE,\n       polar_all_dge,\n       device = \"png\",\n       width = POL_DIMS[1],\n       height = POL_DIMS[2],\n       units = \"in\",\n       dpi = 400)"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"model-proportion-of-time-spent-in-hmm-states","chapter":"7 Model proportion of time spent in HMM states","heading":"7 Model proportion of time spent in HMM states","text":"used multi-way ANOVA model determine whether:test fish lines differed proportions time spent state; andthe test fish lines differed proportions time spent state; andthe iCab reference fishes differed proportions time spent state depending line tank partner.iCab reference fishes differed proportions time spent state depending line tank partner.ANOVA model used :\\[\n\\operatorname{frequency_{assay,state}} = \\beta_{1}(\\operatorname{test~fish~line}) + \\beta_{2}(\\operatorname{date}) + \\beta_{3}(\\operatorname{date}) + \\beta_{4}(\\operatorname{quadrant}) + \\beta_{4}(\\operatorname{tank~side}) + \\epsilon\n\\]\\(frequency\\) inverse-normalised within combination assay state, \\(date\\), \\(time\\), \\(quadrant\\), \\(tank side\\) included covariates.results written spreadsheet: https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs.","code":""},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"setup-3","chapter":"7 Model proportion of time spent in HMM states","heading":"7.1 Setup","text":"","code":"\nlibrary(tidyverse)\nlibrary(DT)"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"read-in-and-clean-data","chapter":"7 Model proportion of time spent in HMM states","heading":"7.2 Read in and clean data","text":"","code":"\nIN = \"/hps/nobackup/birney/users/ian/pilot/hmm_out/0.08/dist_angle/14.csv\"\nN_STATES = 14\n# Read \n\nraw = readr::read_csv(IN)\n#> Rows: 9152328 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Create line recode vector\nline_vec = c(\"iCab\", \"HdrR\", \"HNI\", \"Kaga\", \"HO5\")\nnames(line_vec) = c(\"icab\", \"hdr\", \"hni\", \"kaga\", \"ho5\")\n\n# Clean\n\ndf = raw %>% \n  # Get individual\n  tidyr::unite(date, time, quadrant, fish,\n               col = \"indiv\", \n               remove = F) %>% \n  # add `line` %>% \n  dplyr::mutate(line = dplyr::case_when(fish == \"ref\" ~ ref_fish,\n                                        fish == \"test\" ~ test_fish)) %>% \n  # recode and order `assay` \n  dplyr::mutate(assay = stringr::str_replace(assay, pattern = \"_\", \" \"),\n                assay = factor(assay, levels = c(\"open field\", \"novel object\"))) %>% \n  # recode and order `line`\n  dplyr::mutate(line = dplyr::recode(line, !!!line_vec),\n                line = factor(line, levels = line_vec)) %>% \n  # convert `date` to factor\n  dplyr::mutate(date = factor(date))\n\n# Recode states by mean distance\n\nrank_df = df %>% \n  dplyr::group_by(state) %>% \n  dplyr::summarise(mean_dist = mean(distance)) %>% \n  # rank\n  dplyr::arrange(mean_dist) %>% \n  dplyr::mutate(rank = 1:nrow(.))\n\nrecode_vec = rank_df %>% \n  dplyr::pull(rank)\nnames(recode_vec) = rank_df %>% \n  dplyr::pull(state)\n\n# Recode `state`\n\ndf = df %>% \n  dplyr::mutate(state_recode = dplyr::recode(state, !!!recode_vec),\n                state_recode = factor(state_recode, levels = recode_vec))"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"dge","chapter":"7 Model proportion of time spent in HMM states","heading":"7.3 DGE","text":"","code":"\n# Get proportion of time each fish spent in each state\ndf_dge = df %>% \n  # remove iCab when paired with a different test fish\n  dplyr::filter(!(fish == \"ref\" & test_fish != \"icab\")) %>% \n  ## count rows per fish per state\n  dplyr::count(indiv, assay, line, date, time, quadrant, tank_side, state_recode) %>% \n  # add total row count per fish\n  dplyr::add_count(indiv, assay, line, date, time, quadrant, tank_side, wt = n, name = \"nn\") %>% \n  # get proportion of time fish spent in each state\n  dplyr::mutate(state_freq = n / nn)\n\n# Split by assay\n\ndf_dge %>% \n  ggplot() + \n  geom_histogram(aes(state_freq, fill = state_recode),\n                 bins = 40) +\n  facet_grid(rows = vars(state_recode),\n             cols = vars(assay)) +\n  theme_bw() +\n  scale_fill_viridis_d() +\n  guides(fill = \"none\")"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"inverse-normalise","chapter":"7 Model proportion of time spent in HMM states","heading":"7.3.1 Inverse-normalise","text":"","code":"\n# Add function\ninvnorm = function(x) {\n  res = rank(x)\n  res = qnorm(res/(length(res)+0.5))\n  return(res)\n}\n\ndf_dge = df_dge %>% \n  dplyr::group_by(assay, state_recode) %>% \n  dplyr::mutate(state_freq_invnorm = invnorm(state_freq)) %>% \n  dplyr::ungroup() %>% \n  dplyr::arrange(indiv, assay, line, date, time, quadrant, tank_side, state_recode)\n\ndf_dge %>% \n  ggplot() + \n  geom_histogram(aes(state_freq_invnorm, fill = state_recode),\n                 bins = 40) +\n  facet_grid(rows = vars(state_recode),\n             cols = vars(assay)) +\n  theme_bw() +\n  scale_fill_viridis_d() +\n  guides(fill = \"none\")"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"calculate-variance-explained","chapter":"7 Model proportion of time spent in HMM states","heading":"7.3.2 Calculate variance explained","text":"","code":"\naov_dge = df_dge %>% \n  dplyr::group_by(assay, state_recode) %>% \n  tidyr::nest() %>%\n  dplyr::mutate(model = purrr::map(data, ~aov(\n    state_freq_invnorm ~ date + time + quadrant + tank_side + line,\n    data = .))) %>%\n  select(-data) %>% \n  dplyr::mutate(model_tidy = purrr::map(model, broom::tidy)) %>%\n  tidyr::unnest(model_tidy) %>% \n  rstatix::adjust_pvalue(p.col = \"p.value\", method = \"fdr\") %>% \n  rstatix::add_significance(p.col = \"p.value.adj\") %>% \n  # reduce to 3 digits\n  dplyr::mutate(dplyr::across(c(\"sumsq\", \"meansq\", \"statistic\", \"p.value\", \"p.value.adj\"),\n                              ~signif(.x, digits = 3)))\n\nDT::datatable(aov_dge %>% \n                dplyr::select(-model),\n              options = list(pageLength = 20))"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"save-to-google-drive","chapter":"7 Model proportion of time spent in HMM states","heading":"7.3.3 Save to Google Drive","text":"aov_state_freq : https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs","code":"\n# Open field\ndge_tbl_of = aov_dge %>% \n  dplyr::filter(assay == \"open field\") %>% \n  # add variance explained\n  dplyr::group_by(assay, state_recode) %>% \n  dplyr::mutate(tot_ss = sum(sumsq)) %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(var_expl_perc = (sumsq / tot_ss) * 100 ) %>%\n  # select and rename key columns\n  dplyr::select(State = state_recode,\n                Variable = term,\n                Statistic = statistic,\n                `p-value` = p.value,\n                `p-value FDR-adj` = p.value.adj,\n                `Significance (p-value FDR-adj)` = p.value.adj.signif,\n                `Variance explained (%)` = var_expl_perc) %>% \n  # show only 2 decimals\n  dplyr::mutate(dplyr::across(c(\"Statistic\", \n                                #\"p-value\", \n                                \"Variance explained (%)\"),\n                              ~ format(round(.x, 2), nsmall = 2)))\n\n## Write to google sheet\ngooglesheets4::write_sheet(\n  data = dge_tbl_of,\n  ss = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\",\n  sheet = \"DGE_OF\")\n#> ! Using an auto-discovered, cached token.\n#>   To suppress this message, modify your code or options to\n#>   clearly consent to the use of a cached token.\n#>   See gargle's \"Non-interactive auth\" vignette for more\n#>   details:\n#>   <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n#> ℹ The googlesheets4 package is using a cached token for\n#>   'brettell@ebi.ac.uk'.\n#> Auto-refreshing stale OAuth token.\n#> ✔ Writing to \"aov_state_freq\".\n#> ✔ Writing to sheet 'DGE_OF'.\n\n# Novel object\ndge_tbl_no = aov_dge %>% \n  dplyr::filter(assay == \"novel object\") %>% \n  # add variance explained\n  dplyr::group_by(assay, state_recode) %>% \n  dplyr::mutate(tot_ss = sum(sumsq)) %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(var_expl_perc = (sumsq / tot_ss) * 100 ) %>%\n  # select and rename key columns\n  dplyr::select(State = state_recode,\n                Variable = term,\n                Statistic = statistic,\n                `p-value` = p.value,\n                `p-value FDR-adj` = p.value.adj,\n                `Significance (p-value FDR-adj)` = p.value.adj.signif,\n                `Variance explained (%)` = var_expl_perc) %>% \n  # show only 2 decimals\n  dplyr::mutate(dplyr::across(c(\"Statistic\", \n                                #\"p-value\", \n                                \"Variance explained (%)\"),\n                              ~ format(round(.x, 2), nsmall = 2)))\n\n## Write to google sheet\ngooglesheets4::write_sheet(\n  data = dge_tbl_no,\n  ss = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\",\n  sheet = \"DGE_NO\")\n#> ✔ Writing to \"aov_state_freq\".\n#> ✔ Writing to sheet 'DGE_NO'."},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"sge","chapter":"7 Model proportion of time spent in HMM states","heading":"7.4 SGE","text":"","code":"\n# Get proportion of time each fish spent in each state\ndf_sge = df %>% \n  # take all iCab fishes\n  dplyr::filter(line == \"iCab\") %>% \n  ## count rows per fish per state\n  dplyr::count(indiv, assay, test_fish, date, time, quadrant, tank_side, state_recode) %>% \n  # add total row count per fish\n  dplyr::add_count(indiv, assay, test_fish, date, time, quadrant, tank_side, wt = n, name = \"nn\") %>% \n  # get proportion of time fish spent in each state\n  dplyr::mutate(state_freq = n / nn)\n\n# Split by assay\n\ndf_sge %>% \n  ggplot() + \n  geom_histogram(aes(state_freq, fill = state_recode),\n                 bins = 40) +\n  facet_grid(rows = vars(state_recode),\n             cols = vars(assay)) +\n  theme_bw() +\n  scale_fill_viridis_d(option = \"inferno\") +\n  guides(fill = \"none\")"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"inverse-normalise-1","chapter":"7 Model proportion of time spent in HMM states","heading":"7.4.1 Inverse-normalise","text":"","code":"\ndf_sge = df_sge %>% \n  dplyr::group_by(assay, state_recode) %>% \n  dplyr::mutate(state_freq_invnorm = invnorm(state_freq)) %>% \n  dplyr::ungroup() %>% \n  dplyr::arrange(indiv, assay, test_fish, date, time, quadrant, tank_side, state_recode)\n\ndf_sge %>% \n  ggplot() + \n  geom_histogram(aes(state_freq_invnorm, fill = state_recode),\n                 bins = 40) +\n  facet_grid(rows = vars(state_recode),\n             cols = vars(assay)) +\n  theme_bw() +\n  scale_fill_viridis_d(option = \"inferno\") +\n  guides(fill = \"none\")"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"calculate-variance-explained-1","chapter":"7 Model proportion of time spent in HMM states","heading":"7.4.2 Calculate variance explained","text":"","code":"\naov_sge = df_sge %>% \n  dplyr::group_by(assay, state_recode) %>% \n  tidyr::nest() %>%\n  dplyr::mutate(model = purrr::map(data, ~aov(\n    state_freq_invnorm ~ date + time + quadrant + tank_side + test_fish,\n    data = .))) %>%\n  select(-data) %>% \n  dplyr::mutate(model_tidy = purrr::map(model, broom::tidy)) %>%\n  tidyr::unnest(model_tidy) %>% \n  rstatix::adjust_pvalue(p.col = \"p.value\", method = \"fdr\") %>% \n  rstatix::add_significance(p.col = \"p.value.adj\") %>% \n  # reduce to 3 digits\n  dplyr::mutate(dplyr::across(c(\"sumsq\", \"meansq\", \"statistic\", \"p.value\", \"p.value.adj\"),\n                              ~signif(.x, digits = 3)))\n\nDT::datatable(aov_sge %>% \n                dplyr::select(-model),\n              options = list(pageLength = 20))"},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"save-to-google-drive-1","chapter":"7 Model proportion of time spent in HMM states","heading":"7.4.3 Save to Google Drive","text":"aov_state_freq : https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs","code":"\n# Open field\nsge_tbl_of = aov_sge %>% \n  dplyr::filter(assay == \"open field\") %>% \n  dplyr::select(-model) %>% \n  # add variance explained\n  dplyr::group_by(assay, state_recode) %>% \n  dplyr::mutate(tot_ss = sum(sumsq)) %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(var_expl_perc = (sumsq / tot_ss) * 100 ) %>%\n  # select and rename key columns\n  dplyr::select(State = state_recode,\n                Variable = term,\n                Statistic = statistic,\n                `p-value` = p.value,\n                `p-value FDR-adj` = p.value.adj,\n                `Significance (p-value FDR-adj)` = p.value.adj.signif,\n                `Variance explained (%)` = var_expl_perc) %>% \n  # show only 2 decimals\n  dplyr::mutate(dplyr::across(c(\"Statistic\", \n                                #\"p-value\", \n                                \"Variance explained (%)\"),\n                              ~ format(round(.x, 2), nsmall = 2)))\n\n## Write to Google sheet\ngooglesheets4::write_sheet(\n  data = sge_tbl_of,\n  ss = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\",\n  sheet = \"SGE_OF\")\n#> ✔ Writing to \"aov_state_freq\".\n#> ✔ Writing to sheet 'SGE_OF'.\n\n# Novel object\nsge_tbl_no = aov_sge %>% \n  dplyr::filter(assay == \"novel object\") %>% \n  dplyr::select(-model) %>% \n  # add variance explained\n  dplyr::group_by(assay, state_recode) %>% \n  dplyr::mutate(tot_ss = sum(sumsq)) %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(var_expl_perc = (sumsq / tot_ss) * 100 ) %>%\n  # select and rename key columns\n  dplyr::select(State = state_recode,\n                Variable = term,\n                Statistic = statistic,\n                `p-value` = p.value,\n                `p-value FDR-adj` = p.value.adj,\n                `Significance (p-value FDR-adj)` = p.value.adj.signif,\n                `Variance explained (%)` = var_expl_perc) %>% \n  # show only 2 decimals\n  dplyr::mutate(dplyr::across(c(\"Statistic\", \n                                #\"p-value\", \n                                \"Variance explained (%)\"),\n                              ~ format(round(.x, 2), nsmall = 2)))\n\n## Write to Google sheet\ngooglesheets4::write_sheet(\n  data = sge_tbl_no,\n  ss = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\",\n  sheet = \"SGE_NO\")\n#> ✔ Writing to \"aov_state_freq\".\n#> ✔ Writing to sheet 'SGE_NO'."},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"write-final-table-with-only-significant-variables","chapter":"7 Model proportion of time spent in HMM states","heading":"7.5 Write final table with only significant variables","text":"","code":""},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"dge-1","chapter":"7 Model proportion of time spent in HMM states","heading":"7.5.1 DGE","text":"","code":"\nfinal_dge = dplyr::bind_rows(\n  list(\n    \"open field\" = dge_tbl_of,\n    \"novel_object\" = dge_tbl_no\n    ),\n  .id = \"Assay\") %>% \n  # filter for significant rows\n  dplyr::filter(`p-value FDR-adj` < 0.05) %>% \n  # filter for states where `line` was significant\n  dplyr::filter(Variable == \"line\") %>% \n  # remove p-value\n  dplyr::select(-`p-value`) %>% \n  # convert adjusted p-value to character in scientific notation\n  dplyr::mutate(`p-value FDR-adj` = as.character(scales::scientific(`p-value FDR-adj`, digits = 3))) %>% \n  # remove underscores from values\n  dplyr::mutate(dplyr::across(c(\"Assay\", \"Variable\"),\n                              ~stringr::str_replace(., pattern = \"_\", \" \"))) %>% \n  # rename columns\n  dplyr::rename(\"p-value (FDR-adjusted)\" = \"p-value FDR-adj\",\n                \"Significance\" = \"Significance (p-value FDR-adj)\") %>% \n  # select columns\n  dplyr::select(Assay, State, `Variance explained (%)`, `p-value (FDR-adjusted)`)\n\n## Write to Google sheet\ngooglesheets4::write_sheet(\n  data = final_dge,\n  ss = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\",\n  sheet = \"DGE_FINAL\")\n#> ✔ Writing to \"aov_state_freq\".\n#> ✔ Writing to sheet 'DGE_FINAL'."},{"path":"model-proportion-of-time-spent-in-hmm-states.html","id":"sge-1","chapter":"7 Model proportion of time spent in HMM states","heading":"7.5.2 SGE","text":"","code":"\nfinal_sge = dplyr::bind_rows(\n  list(\n    \"open field\" = sge_tbl_of,\n    \"novel_object\" = sge_tbl_no\n    ),\n  .id = \"Assay\") %>% \n  # filter for significant rows\n  dplyr::filter(`p-value FDR-adj` < 0.05) %>% \n  # filter for states where `test_fish` was significant\n  dplyr::filter(Variable == \"test_fish\") %>% \n  # remove p-value\n  dplyr::select(-`p-value`) %>% \n  # convert adjusted p-value to character in scientific notation\n  dplyr::mutate(`p-value FDR-adj` = as.character(scales::scientific(`p-value FDR-adj`, digits = 3))) %>% \n  # remove underscores from values\n  dplyr::mutate(dplyr::across(c(\"Assay\", \"Variable\"),\n                              ~stringr::str_replace(., pattern = \"_\", \" \"))) %>% \n  # rename columns\n  dplyr::rename(\"p-value (FDR-adjusted)\" = \"p-value FDR-adj\",\n                \"Significance\" = \"Significance (p-value FDR-adj)\") %>% \n  # select columns\n  dplyr::select(Assay, State, `Variance explained (%)`, `p-value (FDR-adjusted)`)\n\n## Write to Google sheet\ngooglesheets4::write_sheet(\n  data = final_sge,\n  ss = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\",\n  sheet = \"SGE_FINAL\")\n#> ✔ Writing to \"aov_state_freq\".\n#> ✔ Writing to sheet 'SGE_FINAL'."},{"path":"time-dependence-of-hmm-states-dge.html","id":"time-dependence-of-hmm-states-dge","chapter":"8 Time dependence of HMM states (DGE)","heading":"8 Time dependence of HMM states (DGE)","text":"Figure ?? depicts time dependence HMM states course video, regions test tank frequently occupied different lines. especially clear difference lines proportions time spent slowest-moving states (.e. states 1 3) beginning assay component, increase across lines novel object assay, likely consequence less room move, well fear response novel object designed elicit. differences clearest comparing southern Japanese medaka lines (iCab, HdrR, HO5) northern Japanese lines (Kaga HNI).addition, note Kaga tends spend time fast- forward-moving state 13 beginning assay times, suggests line, movements may manifestation stress response. Figures ??D ??G show, densities, regions tank frequently occupied line. Although northern Japanese lines Kaga HNI similarly fast-moving relative southern Japanese lines, open field assay component appear favour different regions tank – HNI occupied central regions tank frequency, Kaga tended prefer swimming along boundaries tank.","code":""},{"path":"time-dependence-of-hmm-states-dge.html","id":"setup-4","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.1 Setup","text":"","code":""},{"path":"time-dependence-of-hmm-states-dge.html","id":"load-libraries-3","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.1.1 Load libraries","text":"","code":"\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(ggridges)\nlibrary(viridisLite)\nlibrary(googlesheets4)"},{"path":"time-dependence-of-hmm-states-dge.html","id":"set-variables-2","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.1.2 Set variables","text":"","code":"\nIN = \"/hps/nobackup/birney/users/ian/pilot/hmm_out/0.08/dist_angle/14.csv\"\nAOV_SHEET = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\"\nN_STATES = 15\nPOLAR_ALL_DGE_SIG_OF = here::here(\"book/figs/paper_final/0.08/dist_angle/14/polar_all_dge_sig_of.png\")\nPOLAR_ALL_DGE_SIG_NO = here::here(\"book/figs/paper_final/0.08/dist_angle/14/polar_all_dge_sig_no.png\")\nOUT_DGE = here::here(\"book/figs/time_dependence/dist_angle/0.08_14_dge.png\")\n\n# Create line recode vector\nline_vec = c(\"iCab\", \"HdrR\", \"HNI\", \"Kaga\", \"HO5\")\nnames(line_vec) = c(\"icab\", \"hdr\", \"hni\", \"kaga\", \"ho5\")"},{"path":"time-dependence-of-hmm-states-dge.html","id":"read-and-process-data-1","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.2 Read and process data","text":"","code":"\ndf = readr::read_csv(IN) %>% \n  # recode angle to sit between 0 and 360\n  dplyr::mutate(angle_recode = ifelse(angle < 0,\n                                      180 + (180 + angle),\n                                      angle))\n#> Rows: 9152328 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Recode states by mean distance\n\nrank_df = df %>% \n  dplyr::group_by(state) %>% \n  dplyr::summarise(mean_dist = mean(distance)) %>% \n  # rank\n  dplyr::arrange(mean_dist) %>% \n  dplyr::mutate(rank = 1:nrow(.))\n\nrecode_vec = rank_df %>% \n  dplyr::pull(rank)\nnames(recode_vec) = rank_df %>% \n  dplyr::pull(state)\n\n# Recode `state`\n\ndf = df %>% \n  dplyr::mutate(state_recode = dplyr::recode(state, !!!recode_vec))\n\n# Recode `assay`\n\ndf = df %>% \n  dplyr::mutate(assay = stringr::str_replace(assay, \"_\", \" \"),\n                assay = factor(assay, levels = c(\"open field\", \"novel object\")))\n\n# Add `line`\n\ndf = df %>% \n  dplyr::mutate(line = dplyr::case_when(fish == \"ref\" ~ ref_fish,\n                                        fish == \"test\" ~ test_fish)) %>% \n  # recode\n  dplyr::mutate(line = dplyr::recode(line, !!!line_vec)) %>% \n  # factorise to order\n  dplyr::mutate(line = factor(line, levels = line_vec))\n\n# Recode `test_fish` and order\n\ndf = df %>% \n  dplyr::mutate(test_fish = dplyr::recode(test_fish, !!!line_vec),\n                test_fish = factor(test_fish, levels = line_vec))"},{"path":"time-dependence-of-hmm-states-dge.html","id":"pull-significant-states-from-spreadsheets","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.3 Pull significant states from spreadsheets","text":"","code":"\nSIGS_DGE_OF = googlesheets4::read_sheet(AOV_SHEET, sheet = \"DGE_OF\") %>% \n  dplyr::filter(`p-value FDR-adj` < 0.05 & `Variable` == \"line\") %>% \n  dplyr::pull(State) %>% \n  as.integer()\n#> ! Using an auto-discovered, cached token.\n#>   To suppress this message, modify your code or options to\n#>   clearly consent to the use of a cached token.\n#>   See gargle's \"Non-interactive auth\" vignette for more\n#>   details:\n#>   <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n#> ℹ The googlesheets4 package is using a cached token for\n#>   'brettell@ebi.ac.uk'.\n#> ✔ Reading from \"aov_state_freq\".\n#> ✔ Range ''DGE_OF''.\n\nSIGS_DGE_NO = googlesheets4::read_sheet(AOV_SHEET, sheet = \"DGE_NO\") %>% \n  dplyr::filter(`p-value FDR-adj` < 0.05 & `Variable` == \"line\") %>% \n  dplyr::pull(State)%>% \n  as.integer()\n#> ✔ Reading from \"aov_state_freq\".\n#> ✔ Range ''DGE_NO''."},{"path":"time-dependence-of-hmm-states-dge.html","id":"tile-plots","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.4 Tile plots","text":"","code":"\n\nSEC_INT = 2\n\ndge_tile_df = df %>% \n  # remove iCab ref fishes (because DGE compares test fishes)\n  dplyr::filter(!(line == \"iCab\" & fish == \"ref\")) %>% \n  #dplyr::slice_sample(n = 1e6) %>% \n  # add `indiv` column\n  tidyr::unite(date, time, quadrant, fish,\n               col = \"indiv\",\n               sep = \"_\") %>%\n  # get top state per 2 seconds\n  dplyr::mutate(seconds_bin = floor(seconds / SEC_INT)) %>% \n  dplyr::group_by(assay, indiv, line, seconds_bin) %>% \n  dplyr::count(state_recode) %>% \n  dplyr::slice_max(order_by = n, n = 1) %>% \n  dplyr::ungroup() %>% \n  # reverse order by `indiv` so that the earliest videos are at the top\n  dplyr::arrange(indiv) %>% \n  # convert `seconds_bin` back to seconds\n  dplyr::mutate(seconds = seconds_bin * SEC_INT)\n\n# Open field\n\ndge_tile_of = dge_tile_df %>% \n  dplyr::filter(assay == \"open field\") %>% \n  ggplot() +\n  geom_tile(aes(seconds, indiv, fill = state_recode)) + \n  facet_grid(rows = vars(line), cols = vars(assay), scales = \"free\") +\n  scale_fill_viridis_c() +\n  scale_y_discrete(limits = rev) +\n  guides(fill = \"none\") +\n  ylab(\"individual fish\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\"),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank()) \n\n# Novel object\n\ndge_tile_no = dge_tile_df %>% \n  dplyr::filter(assay == \"novel object\") %>% \n  ggplot() +\n  geom_tile(aes(seconds, indiv, fill = state_recode)) + \n  facet_grid(rows = vars(line), cols = vars(assay), scales = \"free\") +\n  scale_fill_viridis_c() +\n  scale_y_discrete(limits = rev) +\n  guides(fill = \"none\") +\n  ylab(\"individual fish\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\"),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank()) "},{"path":"time-dependence-of-hmm-states-dge.html","id":"density-plots","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.5 Density plots","text":"","code":"\n# Take viridis colours for significant states and add grey\npal_dge_of = viridisLite::viridis(n = N_STATES)\npal_dge_of = c(pal_dge_of[SIGS_DGE_OF], \"#9da2ab\")\nnames(pal_dge_of) = c(as.character(SIGS_DGE_OF), \"other\")\n\npal_dge_no = viridisLite::viridis(n = N_STATES)\npal_dge_no = c(pal_dge_no[SIGS_DGE_NO], \"#9da2ab\")\nnames(pal_dge_no) = c(as.character(SIGS_DGE_NO), \"other\")\n\nASSAY = \"open field\"\ntime_dens_dge_of = df %>% \n  dplyr::filter(assay == ASSAY) %>% \n  # remove iCab when paired with a different test fish\n  dplyr::filter(fish == \"test\") %>% \n  # filter for target assay\n  #dplyr::filter(assay == ASSAY) %>% \n  # recode state \n  dplyr::mutate(state_plot_recode = dplyr::case_when(state_recode %in% SIGS_DGE_OF ~ as.character(state_recode),\n                                                     TRUE ~ \"other\"),\n                state_plot_recode = factor(state_plot_recode, levels = c(as.character(SIGS_DGE_OF), \"other\"))) %>% \n  ggplot() +\n  geom_density(aes(seconds, after_stat(count), fill = state_plot_recode),\n               position = \"fill\") +\n  facet_grid(rows = vars(line),\n             cols = vars(assay)) + \n  scale_fill_manual(values = pal_dge_of) +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  guides(fill = \"none\") +\n  scale_x_continuous(breaks = c(0,200,400,600)) +\n  scale_y_continuous(breaks = c(0,0.5,1))\n\nASSAY = \"novel object\"\ntime_dens_dge_no = df %>% \n  dplyr::filter(assay == ASSAY) %>% \n  # remove iCab when paired with a different test fish\n  dplyr::filter(fish == \"test\") %>% \n  # filter for target assay\n  #dplyr::filter(assay == ASSAY) %>% \n  # recode state \n  dplyr::mutate(state_plot_recode = dplyr::case_when(state_recode %in% SIGS_DGE_NO ~ as.character(state_recode),\n                                                     TRUE ~ \"other\"),\n                state_plot_recode = factor(state_plot_recode, levels = c(as.character(SIGS_DGE_NO), \"other\"))) %>% \n  ggplot() +\n  geom_density(aes(seconds, after_stat(count), fill = state_plot_recode),\n               position = \"fill\") +\n  facet_grid(rows = vars(line),\n             cols = vars(assay)) + \n  scale_fill_manual(values = pal_dge_no) +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  guides(fill = \"none\") +\n  scale_x_continuous(breaks = c(0,200,400,600)) +\n  scale_y_continuous(breaks = c(0,0.5,1))"},{"path":"time-dependence-of-hmm-states-dge.html","id":"spatial-density-plots","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.6 Spatial density plots","text":"","code":"\n# Create density function\n\nget_density <- function(x, y, ...) {\n  dens <- MASS::kde2d(x, y, ...)\n  ix <- findInterval(x, dens$x)\n  iy <- findInterval(y, dens$y)\n  ii <- cbind(ix, iy)\n  return(dens$z[ii])\n}\n\n\n# OF\n\nsdens_dge_df = df %>% \n  #dplyr::slice_sample(n = 1e5) %>% \n  # filter out iCab references when paired with a different line\n  dplyr::filter(fish == \"test\") %>% \n  # group by line\n  dplyr::group_by(assay, line) %>% \n  # get densities\n  dplyr::mutate(density = get_density(x, y, n = 30)) %>% \n  dplyr::ungroup()\n\n  # Plot\nsdens_dge_of = sdens_dge_df %>% \n  ## take only states 1:4\n  dplyr::filter(assay == \"open field\") %>% \n  ggplot() +\n  geom_point(aes(x, y, colour = density),\n             alpha = 0.1, size = 0.2) +\n  facet_grid(cols = vars(assay), rows = vars(line)) +\n  colorspace::scale_color_continuous_sequential(palette = \"Mako\", rev = F) +\n  #scale_colour_viridis_c(option = \"rocket\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(aspect.ratio = 1,\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  scale_x_continuous(breaks = c(0,150,300)) +\n  scale_y_continuous(breaks = c(0,150,300)) +\n  xlab(\"x\") +\n  ylab(\"y\")\n\n# NO\n\nsdens_dge_no = sdens_dge_df %>% \n  dplyr::filter(assay == \"novel object\") %>% \n  # Plot\n  ggplot() +\n  geom_point(aes(x, y, colour = density),\n             alpha = 0.1, size = 0.2) +\n  #coord_polar() +\n  facet_grid(cols = vars(assay), rows = vars(line)) +\n  colorspace::scale_color_continuous_sequential(palette = \"Mako\", rev = F) +\n  #scale_colour_viridis_c(option = \"rocket\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(aspect.ratio = 1,\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  scale_x_continuous(breaks = c(0,150,300)) +\n  scale_y_continuous(breaks = c(0,150,300)) +\n  xlab(\"x\") +\n  ylab(\"y\")"},{"path":"time-dependence-of-hmm-states-dge.html","id":"combine-for-final-figure","chapter":"8 Time dependence of HMM states (DGE)","heading":"8.7 Combine for final figure","text":"","code":"\nfinal_dge_raw = cowplot::plot_grid(dge_tile_of +\n                                 theme(strip.background.y = element_blank(),\n                                       strip.text.y = element_blank(),\n                                       axis.title.y = element_text(vjust=-5)),\n                               time_dens_dge_of + \n                                 theme(strip.background.y = element_blank(),\n                                       strip.text.y = element_blank()),\n                               sdens_dge_of,\n                               dge_tile_no +\n                                 theme(strip.background.y = element_blank(),\n                                       strip.text.y = element_blank(),\n                                       axis.title.y = element_text(vjust=-5)),\n                               time_dens_dge_no +\n                                 theme(strip.background.y = element_blank(),\n                                       strip.text.y = element_blank()),\n                               sdens_dge_no,\n                               nrow = 2, ncol = 3,\n                               rel_widths = c(1,1,0.6,1,1,0.6),\n                               align = \"hv\",\n                               labels = c('B', 'C', 'D', 'E', 'F', 'G'))\n\nfinal_dge_with_polar = ggdraw() +\n  cowplot::draw_image(POLAR_ALL_DGE_SIG_OF,\n                      x = 0, y = 0.8,\n                      width = 1, height = 0.2) +\n  cowplot::draw_plot(final_dge_raw,\n                     x = 0, y = 0.2,\n                     width = 1, height = 0.6) +\n  cowplot::draw_image(POLAR_ALL_DGE_SIG_NO,\n                      x = 0, y = 0,\n                      width = 1, height = 0.2) +\n  cowplot::draw_plot_label(c('A', 'H'),\n                           x = c(0,0), y = c(1, 0.2),\n                           size = 14)\n\nggsave(OUT_DGE,\n       final_dge_with_polar,\n       device = \"png\",\n       width = 11.5,\n       height = 20,\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(OUT_DGE)"},{"path":"time-dependence-of-hmm-states-sge.html","id":"time-dependence-of-hmm-states-sge","chapter":"9 Time dependence of HMM states (SGE)","heading":"9 Time dependence of HMM states (SGE)","text":"Figure ?? layout Figure ??, now displays data iCab reference fishes. observe proportions time spent different states differ based lines tank partner, behavioural patterns tend reflect test fish lines paired . say, iCab reference fishes spend less time slower-moving states presence faster-moving northern Japanese lines Kaga HNI, turn shows test fishes transmitting behaviours degree iCab tank partners. expected, differences behaviours iCab reference fishes based line tank partners large observed lines test fishes . However, unlike observed test fishes, greater number states show significant differences novel object component assay compared open field component. suggests movement restricted, presence potential threat, behaviour test fish tank partner influence iCab reference fish’s behaviour otherwise.","code":""},{"path":"time-dependence-of-hmm-states-sge.html","id":"setup-5","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.1 Setup","text":"","code":""},{"path":"time-dependence-of-hmm-states-sge.html","id":"load-libraries-4","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.1.1 Load libraries","text":"","code":"\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(ggridges)\nlibrary(viridisLite)\nlibrary(googlesheets4)"},{"path":"time-dependence-of-hmm-states-sge.html","id":"set-variables-3","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.1.2 Set variables","text":"","code":"\nIN = \"/hps/nobackup/birney/users/ian/pilot/hmm_out/0.08/dist_angle/14.csv\"\nAOV_SHEET = \"https://docs.google.com/spreadsheets/d/1_l72BZkmWyNAOfCUI8WGP4UfQuIPQtPZZmlRjQffvEs\"\nN_STATES = 15\nPOLAR_ALL_SGE_SIG_OF = here::here(\"book/figs/paper_final/0.08/dist_angle/14/polar_all_sge_sig_of.png\")\nPOLAR_ALL_SGE_SIG_NO = here::here(\"book/figs/paper_final/0.08/dist_angle/14/polar_all_sge_sig_no.png\")\nOUT_SGE = here::here(\"book/figs/time_dependence/dist_angle/0.08_14_sge.png\")\n\n# Create line recode vector\nline_vec = c(\"iCab\", \"HdrR\", \"HNI\", \"Kaga\", \"HO5\")\nnames(line_vec) = c(\"icab\", \"hdr\", \"hni\", \"kaga\", \"ho5\")"},{"path":"time-dependence-of-hmm-states-sge.html","id":"read-and-process-data-2","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.2 Read and process data","text":"","code":"\ndf = readr::read_csv(IN) %>% \n  # recode angle to sit between 0 and 360\n  dplyr::mutate(angle_recode = ifelse(angle < 0,\n                                      180 + (180 + angle),\n                                      angle))\n#> Rows: 9152328 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Recode states by mean distance\n\nrank_df = df %>% \n  dplyr::group_by(state) %>% \n  dplyr::summarise(mean_dist = mean(distance)) %>% \n  # rank\n  dplyr::arrange(mean_dist) %>% \n  dplyr::mutate(rank = 1:nrow(.))\n\nrecode_vec = rank_df %>% \n  dplyr::pull(rank)\nnames(recode_vec) = rank_df %>% \n  dplyr::pull(state)\n\n# Recode `state`\n\ndf = df %>% \n  dplyr::mutate(state_recode = dplyr::recode(state, !!!recode_vec))\n\n# Recode `assay`\n\ndf = df %>% \n  dplyr::mutate(assay = stringr::str_replace(assay, \"_\", \" \"),\n                assay = factor(assay, levels = c(\"open field\", \"novel object\")))\n\n# Add `line`\n\ndf = df %>% \n  dplyr::mutate(line = dplyr::case_when(fish == \"ref\" ~ ref_fish,\n                                        fish == \"test\" ~ test_fish)) %>% \n  # recode\n  dplyr::mutate(line = dplyr::recode(line, !!!line_vec)) %>% \n  # factorise to order\n  dplyr::mutate(line = factor(line, levels = line_vec))\n\n# Recode `test_fish` and order\n\ndf = df %>% \n  dplyr::mutate(test_fish = dplyr::recode(test_fish, !!!line_vec),\n                test_fish = factor(test_fish, levels = line_vec))"},{"path":"time-dependence-of-hmm-states-sge.html","id":"pull-significant-states-from-spreadsheets-1","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.3 Pull significant states from spreadsheets","text":"","code":"\nSIGS_SGE_OF = googlesheets4::read_sheet(AOV_SHEET, sheet = \"SGE_OF\") %>% \n  dplyr::filter(`p-value FDR-adj` < 0.05 & `Variable` == \"test_fish\") %>% \n  dplyr::pull(State)%>% \n  as.integer()\n#> ! Using an auto-discovered, cached token.\n#>   To suppress this message, modify your code or options to\n#>   clearly consent to the use of a cached token.\n#>   See gargle's \"Non-interactive auth\" vignette for more\n#>   details:\n#>   <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n#> ℹ The googlesheets4 package is using a cached token for\n#>   'brettell@ebi.ac.uk'.\n#> ✔ Reading from \"aov_state_freq\".\n#> ✔ Range ''SGE_OF''.\n\nSIGS_SGE_NO = googlesheets4::read_sheet(AOV_SHEET, sheet = \"SGE_NO\") %>% \n  dplyr::filter(`p-value FDR-adj` < 0.05 & `Variable` == \"test_fish\") %>% \n  dplyr::pull(State)%>% \n  as.integer()\n#> ✔ Reading from \"aov_state_freq\".\n#> ✔ Range ''SGE_NO''."},{"path":"time-dependence-of-hmm-states-sge.html","id":"tile-plots-1","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.4 Tile plots","text":"","code":"\nSEC_INT = 2\n\nsge_tile_df = df %>% \n  # take only iCab test fishes \n  dplyr::filter(fish == \"ref\") %>% \n  # add `indiv` column\n  tidyr::unite(date, time, quadrant, fish,\n               col = \"indiv\",\n               sep = \"_\") %>%\n  # rename and reorder assay\n  dplyr::mutate(assay = stringr::str_replace(assay, \"_\", \" \"),\n                assay = factor(assay, levels = c(\"open field\", \"novel object\"))) %>% \n  # get top state per 2 seconds\n  dplyr::mutate(seconds_bin = floor(seconds / SEC_INT)) %>% \n  dplyr::group_by(assay, indiv, test_fish, seconds_bin) %>% \n  dplyr::count(state_recode) %>% \n  dplyr::slice_max(order_by = n, n = 1) %>% \n  dplyr::ungroup() %>% \n  # reverse order by `indiv` so that the earliest videos are at the top\n  dplyr::arrange(indiv) %>% \n  # convert `seconds_bin` back to seconds\n  dplyr::mutate(seconds = seconds_bin * SEC_INT)\n\n# Open field\n\nsge_tile_of = sge_tile_df %>% \n  dplyr::filter(assay == \"open field\") %>% \n  ggplot() +\n  geom_tile(aes(seconds, indiv, fill = state_recode)) + \n  facet_grid(rows = vars(test_fish), cols = vars(assay), scales = \"free\") +\n  scale_fill_viridis_c(option = \"inferno\") +\n  scale_y_discrete(limits = rev) +\n  guides(fill = \"none\") +\n  ylab(\"individual fish\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\"),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank()) \n\n# Novel object\n\nsge_tile_no = sge_tile_df %>% \n  dplyr::filter(assay == \"novel object\") %>% \n  ggplot() +\n  geom_tile(aes(seconds, indiv, fill = state_recode)) + \n  facet_grid(rows = vars(test_fish), cols = vars(assay), scales = \"free\") +\n  scale_fill_viridis_c(option = \"inferno\") +\n  scale_y_discrete(limits = rev) +\n  guides(fill = \"none\") +\n  ylab(\"individual fish\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\"),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank()) "},{"path":"time-dependence-of-hmm-states-sge.html","id":"density-plots-1","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.5 Density plots","text":"","code":"\n# Take viridis colours for significant states and add grey\npal_sge_of = viridisLite::viridis(n = N_STATES, option = \"inferno\")\npal_sge_of = c(pal_sge_of[SIGS_SGE_OF], \"#9da2ab\")\nnames(pal_sge_of) = c(as.character(SIGS_SGE_OF), \"other\")\n\npal_sge_no = viridisLite::viridis(n = N_STATES, option = \"inferno\")\npal_sge_no = c(pal_sge_no[SIGS_SGE_NO], \"#9da2ab\")\nnames(pal_sge_no) = c(as.character(SIGS_SGE_NO), \"other\")\n\nASSAY = \"open field\"\ntime_dens_sge_of = df %>% \n  dplyr::filter(assay == ASSAY) %>% \n  # remove iCab when paired with a different test fish\n  dplyr::filter(fish == \"ref\") %>% \n  # filter for target assay\n  #dplyr::filter(assay == ASSAY) %>% \n  # recode state \n  dplyr::mutate(state_plot_recode = dplyr::case_when(state_recode %in% SIGS_SGE_OF ~ as.character(state_recode),\n                                                     TRUE ~ \"other\"),\n                state_plot_recode = factor(state_plot_recode, levels = c(as.character(SIGS_SGE_OF), \"other\"))) %>% \n  ggplot() +\n  geom_density(aes(seconds, after_stat(count), fill = state_plot_recode),\n               position = \"fill\") +\n  facet_grid(rows = vars(test_fish),\n             cols = vars(assay)) + \n  scale_fill_manual(values = pal_sge_of) +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  guides(fill = \"none\") +\n  scale_x_continuous(breaks = c(0,200,400,600)) +\n  scale_y_continuous(breaks = c(0,0.5,1))\n\nASSAY = \"novel object\"\ntime_dens_sge_no = df %>% \n  dplyr::filter(assay == ASSAY) %>% \n  # remove iCab when paired with a different test fish\n  dplyr::filter(fish == \"ref\") %>% \n  # filter for target assay\n  #dplyr::filter(assay == ASSAY) %>% \n  # recode state \n  dplyr::mutate(state_plot_recode = dplyr::case_when(state_recode %in% SIGS_SGE_NO ~ as.character(state_recode),\n                                                     TRUE ~ \"other\"),\n                state_plot_recode = factor(state_plot_recode, levels = c(as.character(SIGS_SGE_NO), \"other\"))) %>% \n  ggplot() +\n  geom_density(aes(seconds, after_stat(count), fill = state_plot_recode),\n               position = \"fill\") +\n  facet_grid(rows = vars(test_fish),\n             cols = vars(assay)) + \n  scale_fill_manual(values = pal_sge_no) +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  guides(fill = \"none\") +\n  scale_x_continuous(breaks = c(0,200,400,600)) +\n  scale_y_continuous(breaks = c(0,0.5,1))"},{"path":"time-dependence-of-hmm-states-sge.html","id":"spatial-density-plots-1","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.6 Spatial density plots","text":"","code":"\n# Create density function\n\nget_density <- function(x, y, ...) {\n  dens <- MASS::kde2d(x, y, ...)\n  ix <- findInterval(x, dens$x)\n  iy <- findInterval(y, dens$y)\n  ii <- cbind(ix, iy)\n  return(dens$z[ii])\n}\n\n# OF\n\nsdens_sge_df = df %>% \n  #dplyr::slice_sample(n = 1e5) %>% \n  # filter out iCab references when paired with a different line\n  dplyr::filter(fish == \"ref\") %>% \n  # group by line\n  dplyr::group_by(assay, test_fish) %>% \n  # get densities\n  dplyr::mutate(density = get_density(x, y, n = 30)) %>% \n  dplyr::ungroup()\n\n# Plot\nsdens_sge_of = sdens_sge_df %>% \n  # take only states 1:4\n  dplyr::filter(assay == \"open field\") %>% \n  ggplot() +\n  geom_point(aes(x, y, colour = density),\n             alpha = 0.1, size = 0.2) +\n  facet_grid(cols = vars(assay), rows = vars(test_fish)) +\n  #colorspace::scale_color_continuous_sequential(palette = \"Mako\", rev = F) +\n  scale_colour_viridis_c(option = \"rocket\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(aspect.ratio = 1,\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  scale_x_continuous(breaks = c(0,150,300)) +\n  scale_y_continuous(breaks = c(0,150,300)) +\n  xlab(\"x\") +\n  ylab(\"y\")\n\n# NO\n\nsdens_sge_no = sdens_sge_df %>% \n  dplyr::filter(assay == \"novel object\") %>% \n  # Plot\n  ggplot() +\n  geom_point(aes(x, y, colour = density),\n             alpha = 0.1, size = 0.2) +\n  #coord_polar() +\n  facet_grid(cols = vars(assay), rows = vars(test_fish)) +\n  #colorspace::scale_color_continuous_sequential(palette = \"Mako\", rev = F) +\n  scale_colour_viridis_c(option = \"rocket\") +\n  cowplot::theme_cowplot(font_size = 12) +\n  theme(aspect.ratio = 1,\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\")) +\n  scale_x_continuous(breaks = c(0,150,300)) +\n  scale_y_continuous(breaks = c(0,150,300)) +\n  xlab(\"x\") +\n  ylab(\"y\")"},{"path":"time-dependence-of-hmm-states-sge.html","id":"combine-for-final-figure-1","chapter":"9 Time dependence of HMM states (SGE)","heading":"9.7 Combine for final figure","text":"","code":"\nfinal_sge_raw = cowplot::plot_grid(sge_tile_of +\n                                     theme(strip.background.y = element_blank(),\n                                           strip.text.y = element_blank(),\n                                           axis.title.y = element_text(vjust=-5)),\n                                   time_dens_sge_of + \n                                     theme(strip.background.y = element_blank(),\n                                           strip.text.y = element_blank()),\n                                   sdens_sge_of,\n                                   sge_tile_no +\n                                     theme(strip.background.y = element_blank(),\n                                           strip.text.y = element_blank(),\n                                           axis.title.y = element_text(vjust=-5)),\n                                   time_dens_sge_no +\n                                     theme(strip.background.y = element_blank(),\n                                           strip.text.y = element_blank()),\n                                   sdens_sge_no,\n                                   nrow = 2, ncol = 3,\n                                   rel_widths = c(1,1,0.6,1,1,0.6),\n                                   align = \"hv\",\n                                   labels = c('B', 'C', 'D', 'E', 'F', 'G'))\n\nfinal_sge_with_polar = ggdraw() +\n  cowplot::draw_image(POLAR_ALL_SGE_SIG_OF,\n                      x = 0, y = 0.8,\n                      width = 1, height = 0.2) +\n  cowplot::draw_plot(final_sge_raw,\n                     x = 0, y = 0.2,\n                     width = 1, height = 0.6) +\n  cowplot::draw_image(POLAR_ALL_SGE_SIG_NO,\n                      x = 0, y = 0,\n                      width = 1, height = 0.2) +\n  cowplot::draw_plot_label(c('A', 'H'),\n                           x = c(0,0), y = c(1, 0.2),\n                           size = 14)\n\nggsave(OUT_SGE,\n       final_sge_with_polar,\n       device = \"png\",\n       width = 11.5,\n       height = 20,\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(OUT_SGE)"},{"path":"sge-co-occupancy.html","id":"sge-co-occupancy","chapter":"10 SGE co-occupancy","heading":"10 SGE co-occupancy","text":"develop metric quantify degree iCab reference fishes’ behaviour influenced line tank partner, calculated proportions time pairs fish spent simultaneously occupying HMM state. Figure @(fig:cooc-heatmap) shows paired slowest-moving HdrR line, iCab reference fishes spent time co-occupying slow- forward-moving state 2, whereas tended co-occupy fast- forward-moving state 11 paired faster-moving northern Kaga HNI lines. paired another iCab, prefered co-occupy slow-moving pan-directional state 4. combination assay component state, ran Kruskal-Wallis test determine whether differences frequencies state co-occupancy different line pairings (p < 0.05, FDR-adjusted), found significant differences states 1 6 open field component (1.1x10-8 < p < 4.1x10-2), states 1 4 7 novel object component (1.6x10-6 < p < 2.5x10-2) (Figure ??). can seen heatmaps, iCab tends co-occupy state 4 highest frequency paired another iCab, suggests pan-directional, slow-moving state comfortable natural state iCab occupy, particularly stress.","code":""},{"path":"sge-co-occupancy.html","id":"setup-6","chapter":"10 SGE co-occupancy","heading":"10.1 Setup","text":"","code":""},{"path":"sge-co-occupancy.html","id":"load-libraries-5","chapter":"10 SGE co-occupancy","heading":"10.1.1 Load libraries","text":"","code":"\nlibrary(tidyverse)\nlibrary(wesanderson)\nlibrary(rstatix)\nlibrary(cowplot)"},{"path":"sge-co-occupancy.html","id":"set-variables-4","chapter":"10 SGE co-occupancy","heading":"10.1.2 Set variables","text":"","code":"\nIN = \"/hps/nobackup/birney/users/ian/pilot/hmm_out/0.08/dist_angle/14.csv\"\nN_STATES = 14\nVARIABLES = \"distance and angle of travel\"\nINTERVAL = 0.08\nOUT_BOX_ALL = here::here(\"book/figs/sge/co-occupancy/dist_angle/0.08_14_cooc_box_all.png\")\nBOXPLOTS_PER_STATE = here::here(\"book/figs/sge/co-occupancy/dist_angle/0.08_14_cooc_boxplots_per_state.png\")\nOUT_HEAT = here::here(\"book/figs/sge/co-occupancy/dist_angle/0.08_14_cooc_heatmap.png\")\n\n# Create line recode vector\nline_vec = c(\"iCab\", \"HdrR\", \"HNI\", \"Kaga\", \"HO5\")\nnames(line_vec) = c(\"icab\", \"hdr\", \"hni\", \"kaga\", \"ho5\")\n\n# Create palette\nnew_pal = grDevices::colorRampPalette(wesanderson::wes_palette(\"GrandBudapest1\"))\npal = new_pal(5)\nnames(pal) = line_vec\n\n# Number of rows for plots\nN_ROWS = 2"},{"path":"sge-co-occupancy.html","id":"read-data-and-process-3","chapter":"10 SGE co-occupancy","heading":"10.2 Read data and process","text":"","code":"\ndf = readr::read_csv(IN) %>% \n  # recode angle to sit between 0 and 360\n  dplyr::mutate(angle_recode = ifelse(angle < 0,\n                                      180 + (180 + angle),\n                                      angle))\n#> Rows: 9152328 Columns: 15\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (6): assay, ref_fish, test_fish, tank_side, quadrant...\n#> dbl (9): date, time, frame, seconds, x, y, distance, ang...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Recode states by mean distance\n\nrank_df = df %>% \n  dplyr::group_by(state) %>% \n  dplyr::summarise(mean_dist = mean(distance)) %>% \n  # rank\n  dplyr::arrange(mean_dist) %>% \n  dplyr::mutate(rank = 1:nrow(.))\n\nrecode_vec = rank_df %>% \n  dplyr::pull(rank)\nnames(recode_vec) = rank_df %>% \n  dplyr::pull(state)\n\n# Recode `state`\n\ndf = df %>% \n  dplyr::mutate(state_recode = dplyr::recode(state, !!!recode_vec))\n\n# Get SGE df\n\nsge_df = df %>% \n  ## add `line`\n  dplyr::mutate(line = dplyr::case_when(fish == \"ref\" ~ ref_fish,\n                                        fish == \"test\" ~ test_fish)) %>% \n  # recode `test_fish`\n  dplyr::mutate(test_fish = dplyr::recode(test_fish, !!!line_vec)) %>% \n  # order `test_fish`\n  dplyr::mutate(test_fish = factor(test_fish, levels = line_vec)) %>% \n  # rename and reorder assay\n  dplyr::mutate(assay = stringr::str_replace(assay, \"_\", \" \"),\n                assay = factor(assay, levels = c(\"open field\", \"novel object\"))) %>% \n  # add `run` column\n  tidyr::unite(date, time, quadrant,\n               col = \"run\",\n               sep = \"_\",\n               remove = F) %>% \n  # add `indiv` column\n  tidyr::unite(date, time, quadrant, fish,\n               col = \"indiv\",\n               sep = \"_\",\n               remove = F)"},{"path":"sge-co-occupancy.html","id":"co-occupancy-boxplots-all-states","chapter":"10 SGE co-occupancy","heading":"10.3 Co-occupancy boxplots – all states","text":"Calculating frequency co-occupancy across states, compared lines tank partner.","code":"\ncooc = sge_df %>% \n  # pivot wider to get cols for ref and test\n  tidyr::pivot_wider(id_cols = c(\"run\", \"assay\", \"test_fish\", \"seconds\"),\n                     names_from = fish,\n                     values_from = state_recode) %>% \n  # group by run and assay\n  dplyr::group_by(run, assay, test_fish) %>% \n  summarise(TOTAL_ROWS = n(),\n            TOTAL_CONC = sum(ref == test, na.rm = T),\n            FREQ_CONC = TOTAL_CONC / TOTAL_ROWS) %>% \n  dplyr::ungroup()\n#> `summarise()` has grouped output by 'run', 'assay'. You can\n#> override using the `.groups` argument.\n\n# Get KW stat\nkw_all = cooc %>% \n  dplyr::group_by(assay) %>% \n  rstatix::kruskal_test(FREQ_CONC ~ test_fish) %>% \n  rstatix::adjust_pvalue(method = \"fdr\") %>% \n  rstatix::add_significance(p.col = \"p.adj\") %>% \n  #dplyr::mutate(p.adj = as.character(signif(p.adj, digits = 3))) %>% \n  # paste p-value and significance together\n  dplyr::mutate(p_final = dplyr::case_when(p.adj.signif == \"ns\" ~ paste(\"p =\", scales::scientific(p.adj, digits = 2)),\n                                           TRUE ~ paste(\"p =\", scales::scientific(p.adj, digits = 2), p.adj.signif)))\n\n# Plot\n\nbox_all = cooc %>% \n  ggplot() +\n  geom_boxplot(aes(test_fish, FREQ_CONC, fill = test_fish), notch = T) +\n  facet_grid(cols = vars(assay)) +\n  geom_text(data = kw_all,\n            aes(x = \"HdrR\", y = 0.375, label = p_final),\n            size = 4) +\n  cowplot::theme_cowplot() +\n  scale_fill_manual(values = pal) +\n  guides(fill = \"none\") +\n  xlab(\"test fish\") +\n  ylab(\"frequency of state co-occupancy\") +\n  labs(fill = \"test fish\")\n# Save\nggsave(OUT_BOX_ALL,\n       box_all,\n       device = \"png\",\n       width = 8,\n       height = 6,\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(here::here(\"book/figs/sge/co-occupancy/dist_angle/0.08_14_cooc_box_all.png\"))"},{"path":"sge-co-occupancy.html","id":"co-occupancy-boxplots-per-state","chapter":"10 SGE co-occupancy","heading":"10.4 Co-occupancy boxplots – per state","text":"","code":"\nFONT_SIZE = 10\n\ncooc_per_state = sge_df %>% \n  # pivot wider to get cols for ref and test\n  tidyr::pivot_wider(id_cols = c(\"run\", \"assay\", \"test_fish\", \"seconds\"),\n                     names_from = fish,\n                     values_from = state_recode) %>% \n  # group by run and assay\n  dplyr::group_by(run, assay, test_fish) %>% \n  dplyr::count(run, assay, ref, test) %>% \n  dplyr::add_count(run, assay, test_fish, wt = n, name = \"nn\") %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(FREQ_COOC = n / nn) %>% \n  # filter for same state co-occupancy\n  dplyr::filter(ref == test)\n  \n# Get KW stat\nkw_per_state = cooc_per_state %>% \n  dplyr::group_by(assay, ref, test) %>% \n  rstatix::kruskal_test(FREQ_COOC ~ test_fish) %>% \n  rstatix::adjust_pvalue(method = \"fdr\") %>% \n  rstatix::add_significance(p.col = \"p.adj\") %>% \n  # paste p-value and significance together\n  dplyr::mutate(p_final = dplyr::case_when(p.adj.signif == \"ns\" ~ paste(\"p =\", scales::scientific(p.adj, digits = 2)),\n                                           TRUE ~ paste(\"p =\", scales::scientific(p.adj, digits = 2), p.adj.signif)))\n\n# Plot\n\n## OF\nASSAY = \"open field\"\nbox_per_state_of = cooc_per_state %>% \n  dplyr::filter(assay == ASSAY) %>% \n  ggplot() +\n  geom_boxplot(aes(test_fish, FREQ_COOC, fill = test_fish), notch = T) +\n  facet_wrap(vars(ref), nrow = N_ROWS) +\n  geom_text(data = kw_per_state %>% \n              dplyr::filter(assay == ASSAY),\n            aes(x = \"HNI\", y = 0.2, label = p_final),\n            size = 3) +\n  cowplot::theme_cowplot(font_size = 8) +\n  scale_fill_manual(values = pal) +\n  guides(fill = \"none\") +\n  xlab(\"test fish\") +\n  ylab(\"frequency of state co-occupancy\") +\n  ggtitle(ASSAY) +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  ylim(0,max(cooc_per_state$FREQ_COOC))\n\n## NO\nASSAY = \"novel object\"\nbox_per_state_no = cooc_per_state %>% \n  dplyr::filter(assay == ASSAY) %>% \n  ggplot() +\n  geom_boxplot(aes(test_fish, FREQ_COOC, fill = test_fish), notch = T) +\n  facet_wrap(vars(ref), nrow = N_ROWS) +\n  geom_text(data = kw_per_state %>% \n              dplyr::filter(assay == ASSAY),\n            aes(x = \"HNI\", y = 0.2, label = p_final),\n            size = 3) +\n  cowplot::theme_cowplot(font_size = 8) +\n  scale_fill_manual(values = pal) +\n  guides(fill = \"none\") +\n  xlab(\"test fish\") +\n  ylab(\"frequency of state co-occupancy\") +\n  ggtitle(ASSAY) +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  ylim(0,max(cooc_per_state$FREQ_COOC))\n\nfinal_per_state = cowplot::plot_grid(box_per_state_of,\n                                     box_per_state_no,\n                                     nrow = 2)\n\nggsave(BOXPLOTS_PER_STATE,\n       final_per_state,\n       device = \"png\",\n       width = 15,\n       height = 15,\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(BOXPLOTS_PER_STATE)"},{"path":"sge-co-occupancy.html","id":"co-occupancy-heatmap","chapter":"10 SGE co-occupancy","heading":"10.5 Co-occupancy heatmap","text":"","code":"\n# Create df\ncooc_heat = sge_df %>% \n  # pivot wider to get cols for ref and test\n  tidyr::pivot_wider(id_cols = c(\"run\", \"assay\", \"test_fish\", \"seconds\"),\n                     names_from = fish,\n                     values_from = state_recode) %>% \n  dplyr::group_by(assay, test_fish) %>% \n  dplyr::count(assay, ref, test) %>% \n  dplyr::add_count(assay, test_fish, wt = n, name = \"nn\") %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(FREQ_COOC = n / nn) \n\n# Plot\ncooc_heat_plot = cooc_heat %>% \n  # recode NAs as character\n  dplyr::mutate(across(c(ref, test),\n                       ~as.character(.))) %>% \n  # replace NA with character\n  dplyr::mutate(across(c(ref, test),\n                       ~tidyr::replace_na(., \"NA\"))) %>% \n  # convert to factor for order\n  dplyr::mutate(across(c(ref, test),\n                       ~factor(., levels = c(seq(1:N_STATES), \"NA\")))) %>% \n  ggplot() +\n  geom_tile(aes(ref, test, fill = FREQ_COOC)) +\n  facet_grid(cols = vars(test_fish),\n             rows = vars(assay)) +\n  theme_cowplot(font_size = FONT_SIZE) +\n  theme(aspect.ratio = 1) +\n  #scale_x_di(breaks = unique(cooc_heat$ref)) +\n  #scale_y_di(breaks = unique(cooc_heat$test))  +\n  labs(fill = \"Frequency\\nof state\\nco-occupancy\\nwithin\\nline-pairing\") +\n  scale_fill_viridis_c(option = \"plasma\") +\n  xlab(\"reference fish state\") +\n  ylab(\"test fish state\")\n\nggsave(OUT_HEAT,\n       cooc_heat_plot,\n       device = \"png\",\n       width = 18,\n       height = 7,\n       units = \"in\",\n       dpi = 400)\nknitr::include_graphics(OUT_HEAT)"}]
